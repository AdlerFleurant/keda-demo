apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: keda-demo
  name: producer
  annotations:
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"producer:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"producer\")].image"}]
spec:
  selector:
    matchLabels:
      app: producer
  replicas: 1
  template:
    metadata:
      labels:
        app: producer
    spec:
      containers:
      - name: producer
        image: image-registry.openshift-image-registry.svc:5000/keda-demo/producer:latest
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: AMQP_HOST
          value: artemis-default-0-svc
        - name: AMQP_PORT
          value: '5672'
        - name: REQUESTS_ADDRESS
          value: requests
        - name: RESPONSES_ADDRESS
          value: responses
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: producer
  namespace: keda-demo
spec:
  scaleTargetRef:
    name: producer      # I want to scale the producer Deployment
  minReplicaCount:  0   # No Pod outside hours of Operation
  maxReplicaCount:  1   # Never more than 1 replica
  fallback:
    failureThreshold: 3
    replicas: 1         # If the trigger is failing, we need at least 1 replica
  triggers:
    - type: cron
      metadata:
        timezone: America/New_York
        start: 0 * * * * # Active starting at 35th minute of every hour
        end: 55 * * * *   # Not active after the 50th minute of every hour
        desiredReplicas: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: producer
  namespace: keda-demo
spec:
  selector:
    app: producer
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: http
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: producer
  namespace: keda-demo
spec:
  host: ''
  to:
    kind: Service
    name: producer
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect